/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    veterans: Veteran;
    jobs: Job;
    employers: Employer;
    'job-fairs': JobFair;
    'breakout-sessions': BreakoutSession;
    'vector-data': VectorDatum;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    veterans: VeteransSelect<false> | VeteransSelect<true>;
    jobs: JobsSelect<false> | JobsSelect<true>;
    employers: EmployersSelect<false> | EmployersSelect<true>;
    'job-fairs': JobFairsSelect<false> | JobFairsSelect<true>;
    'breakout-sessions': BreakoutSessionsSelect<false> | BreakoutSessionsSelect<true>;
    'vector-data': VectorDataSelect<false> | VectorDataSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role: 'counselor' | 'admin' | 'veteran' | 'employer';
  fullName: string;
  is_active?: boolean | null;
  /**
   * ID from the external API
   */
  external_id?: number | null;
  breakout_sessions?: (string | BreakoutSession)[] | null;
  employers?: (string | Employer)[] | null;
  job_fairs?: (string | JobFair)[] | null;
  saved_jobs?: (string | Job)[] | null;
  applied_jobs?: (string | Job)[] | null;
  /**
   * API synchronization information
   */
  api_sync?: {
    last_synced?: string | null;
    sync_source?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "breakout-sessions".
 */
export interface BreakoutSession {
  id: string;
  topic: string;
  leader: string;
  description?: string | null;
  job_fair: string | JobFair;
  is_active?: boolean | null;
  users?: (string | User)[] | null;
  session_date?: string | null;
  session_time?: string | null;
  /**
   * ID from the external API
   */
  external_id?: number | null;
  /**
   * API synchronization information
   */
  api_sync?: {
    last_synced?: string | null;
    sync_source?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "job-fairs".
 */
export interface JobFair {
  id: string;
  description: string;
  fair_date: string;
  users?: (string | User)[] | null;
  employers?: (string | Employer)[] | null;
  /**
   * ID from the external API
   */
  external_id?: number | null;
  location?: string | null;
  virtual_link?: string | null;
  /**
   * API synchronization information
   */
  api_sync?: {
    last_synced?: string | null;
    sync_source?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employers".
 */
export interface Employer {
  id: string;
  company_name: string;
  description?: string | null;
  is_active?: boolean | null;
  user_likes?: (string | User)[] | null;
  job_fairs?: (string | JobFair)[] | null;
  /**
   * ID from the external API
   */
  external_id?: number | null;
  logo?: (string | null) | Media;
  /**
   * API synchronization information
   */
  api_sync?: {
    last_synced?: string | null;
    sync_source?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobs".
 */
export interface Job {
  id: string;
  title: string;
  description: string;
  employer: string | Employer;
  is_active?: boolean | null;
  applicants?: (string | Veteran)[] | null;
  user_saves?: (string | User)[] | null;
  /**
   * ID from the external API
   */
  external_id?: number | null;
  /**
   * API synchronization information
   */
  api_sync?: {
    last_synced?: string | null;
    sync_source?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "veterans".
 */
export interface Veteran {
  id: string;
  fullName: string;
  email: string;
  phone?: string | null;
  serviceBranch?: ('Army' | 'Navy' | 'Air Force' | 'Marines' | 'Coast Guard' | 'Space Force') | null;
  status: 'Assessment' | 'Training' | 'Job Search' | 'Employed' | 'Graduated';
  certifications?:
    | {
        title?: string | null;
        issuer?: string | null;
        dateReceived?: string | null;
        id?: string | null;
      }[]
    | null;
  education?:
    | {
        institution?: string | null;
        degree?: string | null;
        fieldOfStudy?: string | null;
        graduationYear?: number | null;
        id?: string | null;
      }[]
    | null;
  resume?: (string | null) | Media;
  counselor: string | User;
  user: string | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vector-data".
 */
export interface VectorDatum {
  id: string;
  title: string;
  description?: string | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  vector_data?:
    | {
        value?: number | null;
        id?: string | null;
      }[]
    | null;
  linked_resource_type?: ('jobs' | 'employers' | 'veterans') | null;
  /**
   * ID of the linked resource
   */
  linked_resource_id?: string | null;
  /**
   * ID from the external API
   */
  external_id?: string | null;
  /**
   * API synchronization information
   */
  api_sync?: {
    last_synced?: string | null;
    sync_source?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'veterans';
        value: string | Veteran;
      } | null)
    | ({
        relationTo: 'jobs';
        value: string | Job;
      } | null)
    | ({
        relationTo: 'employers';
        value: string | Employer;
      } | null)
    | ({
        relationTo: 'job-fairs';
        value: string | JobFair;
      } | null)
    | ({
        relationTo: 'breakout-sessions';
        value: string | BreakoutSession;
      } | null)
    | ({
        relationTo: 'vector-data';
        value: string | VectorDatum;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  fullName?: T;
  is_active?: T;
  external_id?: T;
  breakout_sessions?: T;
  employers?: T;
  job_fairs?: T;
  saved_jobs?: T;
  applied_jobs?: T;
  api_sync?:
    | T
    | {
        last_synced?: T;
        sync_source?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "veterans_select".
 */
export interface VeteransSelect<T extends boolean = true> {
  fullName?: T;
  email?: T;
  phone?: T;
  serviceBranch?: T;
  status?: T;
  certifications?:
    | T
    | {
        title?: T;
        issuer?: T;
        dateReceived?: T;
        id?: T;
      };
  education?:
    | T
    | {
        institution?: T;
        degree?: T;
        fieldOfStudy?: T;
        graduationYear?: T;
        id?: T;
      };
  resume?: T;
  counselor?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobs_select".
 */
export interface JobsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  employer?: T;
  is_active?: T;
  applicants?: T;
  user_saves?: T;
  external_id?: T;
  api_sync?:
    | T
    | {
        last_synced?: T;
        sync_source?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employers_select".
 */
export interface EmployersSelect<T extends boolean = true> {
  company_name?: T;
  description?: T;
  is_active?: T;
  user_likes?: T;
  job_fairs?: T;
  external_id?: T;
  logo?: T;
  api_sync?:
    | T
    | {
        last_synced?: T;
        sync_source?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "job-fairs_select".
 */
export interface JobFairsSelect<T extends boolean = true> {
  description?: T;
  fair_date?: T;
  users?: T;
  employers?: T;
  external_id?: T;
  location?: T;
  virtual_link?: T;
  api_sync?:
    | T
    | {
        last_synced?: T;
        sync_source?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "breakout-sessions_select".
 */
export interface BreakoutSessionsSelect<T extends boolean = true> {
  topic?: T;
  leader?: T;
  description?: T;
  job_fair?: T;
  is_active?: T;
  users?: T;
  session_date?: T;
  session_time?: T;
  external_id?: T;
  api_sync?:
    | T
    | {
        last_synced?: T;
        sync_source?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vector-data_select".
 */
export interface VectorDataSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  vector_data?:
    | T
    | {
        value?: T;
        id?: T;
      };
  linked_resource_type?: T;
  linked_resource_id?: T;
  external_id?: T;
  api_sync?:
    | T
    | {
        last_synced?: T;
        sync_source?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}